<?xml version='1.0' encoding='UTF-8'?>
<root>
  <str key="periodic_saving">Periodic Saving</str>
  <str key="pb_desc">In addition to manual saves, SaveDesktop also allows you to save your desktop configuration periodically. You can choose from the following options:</str>
  <str key="pb_options">- **Daily**: 
  - After logging into the system, SaveDesktop starts in the background and backs up the configuration. If you then log back in this day, it will not do it again, because it has already been created for that day.
- **Weekly**:
  - SaveDesktop performs a configuration backup every Monday if "Weekly" is selected. If the computer is not running on that day, SaveDesktop does not do it the next day.
- **Monthly**:
  - If "Monthly" is selected, SaveDesktop makes the backup on the first day of the month, e.g. May 1, June 1, December 1, etc. As with "Weekly", if the computer is not running on that day, SaveDesktop does not perform it the next day.
- **Never**:
  - Nothing's happening</str>
  <str key="pb_location">### Where are the periodic saving files stored?
Default directory for periodic saving is `/home/user/Downloads/SaveDesktop/archives`, but you can choose custom directory.</str>
  <str key="pb_filename_title">### Filename format</str>
  <str key="pb_filname_desc">If you want to give a filename format for periodic saving files other than `Latest_configuration`, it is possible, even with spaces. Since version 2.9.6, variable `{}` doesn't work for setting the today date because now, in every periodic saving, the original backup file is overwritten.</str>
  <str key="save_installed_flatpaks_title">Save installed Flatpak apps and install them from list</str>
  <str key="save_flatpak_intro">Since version 2.5, SaveDesktop allows you to save installed Flatpak applications and install them from a list. So how does it work?</str>
  <str key="saving_flatpaks">### Saving installed Flatpak applications
It is possible to save a list of installed Flatpak applications installed in the system directory /var/lib/flatpak/app and the home directory ~/.local/share/flatpak/app. The list of installed Flatpak applications in the configuration archive is marked as installed_flatpaks.sh for the system directory and installed_user_flatpaks.sh for the home directory.</str>
  <str key="installing_flatpaks">### Installing Flatpak applications from the list
After importing the saved configuration file and logging back in, **the Flatpak applications will start installing in the background.**</str>
  <str key="synchronization_between_computers_title">Synchronization between computers in the network</str>
  <str key="requirements">#### Requirements
- You must have a folder created that will sync with your cloud storage on each computer you want to sync. This can be done using:</str>
  <str key="gnome_online_accounts">
    <details>
      <summary>
        <b>GNOME Online Accounts</b>
        <p>(for GNOME, Cinnamon, COSMIC (Old) and Budgie desktop environments)</p>
      </summary>

    - Open the GNOME Settings
    - Go to the Online Accounts section and select your cloud drive service

      ![OnlineAccounts.png](https://raw.githubusercontent.com/vikdevelop/SaveDesktop/webpage/wiki/synchronization/screenshots/OnlineAccounts_en.png) 
    
  </details>
  </str>
  <str key="rclone">
    <details>
      <summary>
        <b>Rclone</b>
        <p>(for other desktop environments)</p>
      </summary>

    - Install Rclone
      ```
      sudo -v ; curl https://rclone.org/install.sh | sudo bash
      ```
      
    - Setup Rclone by using this command, which creates the cloud drive folder, sets up Rclone and mounts the folder
      ```
      mkdir -p ~/drive &amp;&amp; rclone config create drive your-cloud-drive-service &amp;&amp; nohup rclone mount drive: ~/drive --vfs-cache-mode writes &amp; echo "The drive has been mounted successfully"
      ```
      * Instead of `your-cloud-drive-service` use the name of your cloud drive service, such as `drive` (for Google Drive), `onedrive`, `dropbox`, etc.

    - Allow access to the created folder in the [Flatseal app](https://flathub.org/apps/com.github.tchx84.Flatseal).
  </details>
  </str>
  <str key="set_up_first_computer">## Setting up synchronization in the SaveDesktop app
On the first computer:
1. Open the SaveDesktop app
2. On the Sync page, click on the "Set up the sync file" button and then on the "Change" button
3. Click on "Periodic saving" and select the folder that is synchronized with your cloud storage as a periodic saving folder
4. If the periodic saving file does not exist, click on the Create button</str>
  <str key="set_up_second_computer">On the second computer:
1. Open the SaveDesktop app
2. Go to the Sync page and click the "Connect to the cloud storage" button.
3. Click on the "Select cloud drive folder" button and select the folder that is synced with the same cloud storage as the first computer.
4. Select the periodic synchronization interval, because if you leave that to Never, the synchronization doesn't work.

To set up bidirectional synchronization, make sure you have the same cloud folder selected in the "Connect to cloud storage" dialog on the first computer, the periodic synchronization interval selected, and the "Bidirectional synchronization" switch enabled.
</str>
  <str key="periodic_sync">### Periodic synchronization
You can choose between the following options:
- Daily
- Weekly (synchronization takes place every Tuesday)
- Monthly (synchronization takes place every second day in the month)
- Manually (it is possible to sync configuration from the menu in the header bar by clicking on the three dots)
- Never (nothing's happening)</str>
  <str key="saving_cfg_title">Saving configuration</str>
  <str key="saving_cfg_intro">If you prefer command-line interface (CLI) before graphical user interface (GUI), SaveDesktop in addition to saving configuration in the GUI, allows you save configuration in the CLI.</str>
  <str key="save_cfg_outro">When using this method, it uses parameters from the GUI, specifically parameters from the periodic saving mode, such as filename format and selected folder for periodic saving files. You can save the configuration with this method whenever you want, regardless of the selected periodic saving interval.</str>
  <str key="version_warning">**This feature is available from version: `3.2.2`**</str>
  <str key="import_cfg_in_cli_title">Importing configuration</str>
  <str key="imp_cfg_cli_intro">In addition to importing configuration in the GUI, SaveDesktop also allows you to import configuration in the command line interface (CLI), which you can use in case your desktop environment breaks.</str>
  <str key="imp_cfg_cli_steps">### So how to proceed?
**1. Open a terminal**

You can open it from the applications menu, or by using the Ctrl+Alt+T keyboard shortcut.

**2. Enter the command**

Enter the following command in the terminal:
- if you have SaveDesktop installed as a Flatpak package, use the following:
     ```
     flatpak run io.github.vikdevelop.SaveDesktop --import-config /path/to/filename.sd.tar.gz
     ```
- if you have SaveDesktop installed as a Snap or native package, use: 
     ```
     savedesktop --import-config /path/to/filename.sd.tar.gz
     ```</str>
  <str key="imp_cfg_cli_note">**Note**:
- instead of `/path/to/filename.sd.tar.gz`, enter the path to the configuration archive you want to import, for example: `/home/user/Downloads/myconfig.sd.tar.gz`</str>
  <str key="archive_encryption_">Archive encryption</str>
  <str key="archive_encryption_desc">If you want to encrypt the configuration archive, whether for data protection reasons or something else, you can use the archive encryption feature in the SaveDesktop app. So, how does it work, and how to set it up?</str>
  <str key="ac_intro">## How does it work?
If this feature is enabled, SaveDesktop will always ask you to create a password for your new archive of the configuration. The criteria for the password include at least 12 characters, one uppercase letter, one lowercase letter, and one special character. If the password doesn't meet these criteria, it will not be possible to continue saving configuration. </str>
  <str key="enc">The archive will be saved as a ZIP archive (because Tar doesn't support the password protection feature), and if you want to extract it, you will be asked to enter the password that you used in the saving configuration process. The same applies in the case of configuration import.

If you forgot the password, it will not possible to extract the archive and use it in the importing configuration process.</str>
  <str key="ac_warn">&gt; [!WARNING]  
&gt; The periodic saving files are (so far) not available to protect with a password. Encrypted archives are, so far, not possible to use in synchronization.</str>
  <str key="ac_setup">## How to set it up?
In the 3.3 version, the interface has been slightly modified, specifically, periodic saving section is now located under the "More options" button. On the same place, is located archive encryption section. So click on the already mentioned button, and enable Archive encryption switch.</str>
</root>
